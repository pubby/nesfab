/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

// This example displays a metasprite.

data /sprites
    // Here's where we define our metasprite, comprised of four 8x8 tiles:
    [] my_metasprite
        (make_metasprite(0, Ms{}(
            Ms(-8, -8, $00, $00),
            Ms( 0, -8, $01, $00),
            Ms(-8,  0, $02, $00),
            Ms( 0,  0, $03, $00))))

vars
    // Player variables:
    SS px = 128
    SS py = 120
    U pflip = 0

nmi game_nmi()
    // Update OAM and poll the pads:
    ppu_upload_oam_poll_pads(0)

    // Turn on rendering:
    {PPUMASK}(PPUMASK_SPR_ON | PPUMASK_NO_CLIP)

    // Reset the scroll
    ppu_reset_scroll(0, 0)

mode main()
: nmi game_nmi
    palette = example_palette
    ppu_upload_palette()
    {PPUCTRL}(PPUCTRL_NMI_ON)

    while true
        nmi
        update_pads()
        move_player()
        update_sprites()

fn move_player()
    ct Int SPEED = 2

    if pads[0].held & BUTTON_LEFT
        px -= SPEED
        pflip |= ATTR_H_FLIP
    else if pads[0].held & BUTTON_RIGHT
        px += SPEED
        pflip &= ~ATTR_H_FLIP

    if pads[0].held & BUTTON_UP
        py -= SPEED
        pflip &= ~ATTR_V_FLIP
    else if pads[0].held & BUTTON_DOWN
        py += SPEED
        pflip |= ATTR_V_FLIP

fn update_sprites()
    // Our stack index into OAM:
    U o = 0

    o = push_oam_metasprite_a(o, px, py, @my_metasprite, pflip)

    // Clear the remainder of OAM
    hide_oam(o)

chrrom
    file(fmt, "sprite.png")
