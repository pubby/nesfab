/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

///////////////////////////////////////////////////////////////////////////////
// Helper code for interfacing MMC3 ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

// IMPORTANT NOTE:
//
// In NESFab's implementation of MMC3, 
// the two highest bits of $8000 cannot and should not be set. 
// When writing to $8000, leave the two highest bits zero.
// Otherwise you will break the bankswitching behavior.

// Registers:
ct AA MMC3_BANK_SELECT = $8000
ct AA MMC3_BANK_DATA   = $8001
ct AA MMC3_MIRRORING   = $A000
ct AA MMC3_RAM_PROTECT = $A001
ct AA MMC3_IRQ_LATCH   = $C000
ct AA MMC3_IRQ_RELOAD  = $C001
ct AA MMC3_IRQ_DISABLE = $E000
ct AA MMC3_IRQ_ENABLE  = $E001

// Changes the MMC3 CHR bank by writing to $8000 then $8001.
fn mmc3_select(U bank_select, U bank_data)
: +inline
    {&__mapper_detail}(bank_select) // Shadow register used by the runtime.
    {MMC3_BANK_SELECT, MMC3_BANK_DATA}(bank_select, bank_data)

// Changes the MMC3 CHR bank. This is the unsafe bank switch version.
fn mmc3_select_unsafe(U bank_select, U bank_data)
: +inline
    {MMC3_BANK_SELECT, MMC3_BANK_DATA}(bank_select, bank_data)

// Triggers IRQ after a set number of scanlines: 
fn mmc3_timer(U scanlines)
: +inline
    {MMC3_IRQ_DISABLE}(scanlines)
    {MMC3_IRQ_LATCH}(scanlines)
    {MMC3_IRQ_RELOAD}(scanlines)
    {MMC3_IRQ_DISABLE}(scanlines)
    {MMC3_IRQ_ENABLE}(scanlines)

// Resets the MMC3 mapper state to known values.
fn mmc3_reset()
    {MMC3_RAM_PROTECT}($80)
    {MMC3_IRQ_DISABLE}(0)
    {MMC3_MIRRORING}(0)
    mmc3_select(0, 0)
    mmc3_select(1, 0)
    mmc3_select(2, 0)
    mmc3_select(3, 0)
    mmc3_select(4, 0)
    mmc3_select(5, 0)
